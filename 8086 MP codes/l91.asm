TITLE ADD N DATA
	.MODEL SMALL
	.STACK 64
	.DATA
MAX_CHAR DB 5
ACT_CHAR DB ?
INP DB 5 DUP(?)
NUM DW 0
SUM DW 0
NEWLN DB 0DH,0AH,'$'
	.CODE 
MAIN PROC FAR
	MOV AX,@DATA
	MOV DS,AX
	
	MOV AH,0AH
	MOV DX,OFFSET MAX_CHAR
	INT 21H
	
	;TERMINATE THE STRING
	MOV BH,0
	MOV BL,ACT_CHAR
	MOV INP[BX],'$'
	
	MOV BX,OFFSET INP		;POINTER TO THE INPUT
	
CALC:
	MOV DX,10
	MOV AL,[BX]
	CMP AL,'$'
	JE PASS					;QUIT CALC IF '$' IS DETECTED
	SUB AL,30H
	MOV AH,0
	ADD AX,NUM
	MUL DX					;MULTIPLY AX (NUM) AND 10, STORED IN DX:AX
	MOV NUM,AX
	INC BX
	JMP CALC
PASS:
	MOV AX,NUM				
	MOV BX,10
	MOV DX,0
	DIV BX					;DIVIDE BY 10 AT THE END
	MOV CX,AX				;SET THE NUMBER TO COUNTER REGISTER
	MOV DX,0
ADDITION:
	ADD SUM,CX
	ADC DX,0				;FOR SUM GREATER THAN 16 BIT
	LOOP ADDITION			;SUM IN HEX
	
	MOV BX,10				;FOR DIVISION BELOW
	MOV CX,0
	MOV AX,SUM
DISPFORMAT:					;CHANGE TO ASCII FOR DISPLAY	
	MOV SI,DX				;SAVE VALUE OF DX
	DIV BX					;CONVERT TO DECIMAL FORMAT
	ADD DX,30H
	PUSH DX					;SAVE THE CONTENTS OF AX
	MOV DX,SI				;RESTORE VALUE OF DX
	INC CX					;COUNTING THE NUMBER OF DATA IN STACK
	CMP AX,0
	JE NEWLINE
	JMP DISPFORMAT
NEWLINE:
	MOV DX,OFFSET NEWLN		;DISPLAY NEWLINE BEFORE DISPLAYING ANSWER
	MOV AH,09H
	INT 21H
	MOV AH,02	
DISPLAY:
	POP DX
	INT 21H
	LOOP DISPLAY
	
	MOV AX,4C00H
	INT 21H
MAIN ENDP
	END MAIN
	